-- Create database
CREATE DATABASE IF NOT EXISTS DAC_PROJECT;
USE DAC_PROJECT;

-- CUSTOMERS Table
CREATE TABLE CUSTOMERS (
  cst_id INT PRIMARY KEY AUTO_INCREMENT,
  cst_name VARCHAR(20) NOT NULL,
  email VARCHAR(50) UNIQUE NOT NULL,
  address VARCHAR(50) NOT NULL,
  gender ENUM('Male', 'Female') NOT NULL,
  phone CHAR(10) NOT NULL,
  password VARCHAR(100) NOT NULL,
  reg_date DATETIME DEFAULT CURRENT_TIMESTAMP,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  created_by VARCHAR(30),
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  is_deleted BOOLEAN DEFAULT FALSE
);

-- EMAIL_VERIFICATION Table
CREATE TABLE EMAIL_VERIFICATION (
  id INT PRIMARY KEY AUTO_INCREMENT,
  user_type ENUM('CUSTOMER', 'ORGANISER') NOT NULL,
  user_id INT NOT NULL,
  token VARCHAR(64) UNIQUE NOT NULL,
  expiry DATETIME NOT NULL,
  is_used BOOLEAN DEFAULT FALSE,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- ORGANISER Table
CREATE TABLE ORGANISER (
  org_id INT PRIMARY KEY AUTO_INCREMENT,
  org_company_name VARCHAR(30) UNIQUE NOT NULL,
  org_company_logo VARCHAR(80) UNIQUE NOT NULL,
  phone_no CHAR(10) NOT NULL,
  email VARCHAR(50) UNIQUE NOT NULL,
  password VARCHAR(100) NOT NULL,
  address VARCHAR(50) NOT NULL,
  reg_date DATETIME DEFAULT CURRENT_TIMESTAMP,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  created_by VARCHAR(30),
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  is_deleted BOOLEAN DEFAULT FALSE
);

-- CATEGORY Table
CREATE TABLE CATEGORY (
  ctg_id INT PRIMARY KEY AUTO_INCREMENT,
  ctg_name VARCHAR(30) UNIQUE NOT NULL,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  created_by VARCHAR(30),
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  is_deleted BOOLEAN DEFAULT FALSE
);

-- FACILITY Table
CREATE TABLE FACILITY (
  fst_id INT PRIMARY KEY AUTO_INCREMENT,
  fst_name VARCHAR(30) NOT NULL,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  created_by VARCHAR(30),
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  is_deleted BOOLEAN DEFAULT FALSE
);

CREATE TABLE EVENTS (
  evt_id INT PRIMARY KEY AUTO_INCREMENT,
  evt_title VARCHAR(50) NOT NULL,
  description VARCHAR(255),
  start_dateTime DATETIME NOT NULL,
  end_dateTime DATETIME NOT NULL,
  location VARCHAR(100) NOT NULL,
  capacity INT,
  remaining_capacity INT,
  ticket_price DECIMAL(10,3),
  reg_date DATETIME DEFAULT CURRENT_TIMESTAMP,
  fst_id INT NULL,
  org_id INT NULL,
  ctg_id INT NULL,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  created_by VARCHAR(30),
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  is_deleted BOOLEAN DEFAULT FALSE,
  FOREIGN KEY (org_id) REFERENCES ORGANISER(org_id) ON DELETE SET NULL,
  FOREIGN KEY (ctg_id) REFERENCES CATEGORY(ctg_id) ON DELETE SET NULL,
  FOREIGN KEY (fst_id) REFERENCES FACILITY(fst_id) ON DELETE SET NULL
);

-- PAYMENTS Table
CREATE TABLE PAYMENTS (
  pmt_id INT PRIMARY KEY AUTO_INCREMENT,
  pmt_date DATETIME DEFAULT CURRENT_TIMESTAMP,
  evt_id INT,
  cst_id INT,
  attendee_count INT,
  amount DECIMAL(10,2),
  payment_method ENUM('SCAN', 'UPI', 'CREDITCARD') NOT NULL,
  status VARCHAR(50),
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  is_deleted BOOLEAN DEFAULT FALSE,
  FOREIGN KEY (evt_id) REFERENCES EVENTS(evt_id),
  FOREIGN KEY (cst_id) REFERENCES CUSTOMERS(cst_id)
);

-- BOOKING Table
CREATE TABLE BOOKING (
  bkg_id INT PRIMARY KEY AUTO_INCREMENT,
  cst_id INT,
  evt_id INT,
  pmt_id INT NULL,
  total_attendee INT,
  bkg_date DATETIME DEFAULT CURRENT_TIMESTAMP,
  status VARCHAR(50),
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  is_deleted BOOLEAN DEFAULT FALSE,
  FOREIGN KEY (cst_id) REFERENCES CUSTOMERS(cst_id) ON DELETE CASCADE,
  FOREIGN KEY (evt_id) REFERENCES EVENTS(evt_id) ON DELETE CASCADE,
  FOREIGN KEY (pmt_id) REFERENCES PAYMENTS(pmt_id) ON DELETE SET NULL
);

-- TICKETS Table
CREATE TABLE TICKETS (
  tkt_id INT PRIMARY KEY AUTO_INCREMENT,
  bkg_id INT,
  issue_date DATETIME DEFAULT CURRENT_TIMESTAMP,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  is_deleted BOOLEAN DEFAULT FALSE,
  FOREIGN KEY (bkg_id) REFERENCES BOOKING(bkg_id)
);
